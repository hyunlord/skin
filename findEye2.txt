package opencv2;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Rect;
import org.opencv.core.Size;
import org.opencv.highgui.Highgui;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;

public class findEye2
{
	public void detect()
	{
		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
		System.out.println("\nRunning FaceDetector");
		
		CascadeClassifier eyeDetector = new CascadeClassifier(getClass().getResource("haarcascade_eye_tree_eyeglasses.xml").getPath().substring(1));
		Mat image = Highgui.imread(getClass().getResource("face14.jpg").getPath().substring(1));
		Mat blank = new Mat(image.size(), 16);
		Mat gray = new Mat();
		Imgproc.cvtColor(image, gray, Imgproc.COLOR_RGB2GRAY);

		MatOfRect eyeDetections = new MatOfRect();
		eyeDetector.detectMultiScale(gray, eyeDetections);
		
		System.out.println(String.format("Detected %s objs", eyeDetections.toArray().length));
		
		// byte[] bt = {(byte) 255, (byte) 0,(byte) 0};
		byte[] bt2 = {(byte) 255, (byte) 255,(byte) 255};
		for(Rect rect : eyeDetections.toArray())
		{
			Rect rect2 = new Rect(rect.x, rect.y + (int) (rect.height * 0.2), rect.width, (int) (rect.height * 0.8));
			Mat cannymat = new Mat(image, rect2);
			Imgproc.Canny(cannymat, cannymat, 200, 200);

			for(int i = 0; i <= (int)(rect.height * 0.8); i++)
				for(int j = 0; j <= rect.width; j++)
				{
					double data[] = cannymat.get(i, j);
					if(data != null && data[0] == 255.0)	
					{
						// image.put(i + rect.y + (int) (rect.height * 0.2), j + rect.x, bt);
						blank.put(i + rect.y + (int) (rect.height * 0.2), j + rect.x, bt2);
					}
					// else System.out.println(i + " " + j);
				}			
			// showResult(cannymat);
		}	
		showResult(image);
		showResult(blank);
		
		String filename = "output_0.png";
		System.out.println(String.format("Writing %s", filename));
		Highgui.imwrite(filename, image);
		
		filename = "output_1.png";
		System.out.println(String.format("Writing %s", filename));
		Highgui.imwrite(filename, blank);
	}
	
	public static void showResult(Mat img) 
	
	{
	    Imgproc.resize(img, img, new Size(640, 480));
	    MatOfByte matOfByte = new MatOfByte();
	    Highgui.imencode(".jpg", img, matOfByte);
	    byte[] byteArray = matOfByte.toArray();
	    BufferedImage bufImage = null;
	    try 
	    {
	        InputStream in = new ByteArrayInputStream(byteArray);
	        bufImage = ImageIO.read(in);
	        JFrame frame = new JFrame();
	        frame.getContentPane().add(new JLabel(new ImageIcon(bufImage)));
	        frame.pack();
	        frame.setVisible(true);
	    } catch (Exception e) 
	    {
	        e.printStackTrace();
	    }
	}
}
